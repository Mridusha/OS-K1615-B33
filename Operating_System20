#include<stdio.h>

void StateCheck(int *max,int avail,int q)
{
	int i;
	int current;
	current=avail;

    int safe_sequence[q];
	int process_count=0;
	int allocated[q];
	int executed[q];
	for(i=0;i<q;i++)
	{
		safe_sequence[i]=0;
		allocated[i]=0;
		executed[i]=0;
	}
	do
	{
	 for(i=0;i<q;i++)
	 {
		if(executed[i]==0)
		{
			if(current>0)
			{
				allocated[i]++;
				current--;
			}

			if(allocated[i]==max[i])
			{
				executed[i]=1;
				printf("Process %d executed\n",i);
				current=current+allocated[i];
                safe_sequence[process_count]=i;
				process_count++;
			}
		}
	 }

	}while(process_count!=q);

	printf("Safe sequence is: ");
	for(i=0;i<q;i++)
	{
		printf("P%d\t",safe_sequence[i]);
	}
}

int main()
{
	int q;
	int p;
	int i;
	printf("Enter the number of Processes: ");
	scanf("%d",&q);
	printf("Enter the number of Resources: ");
	scanf("%d",&p);

	int available=p;

	int max[q],max_total=0;
	printf("Enter the maximum requirement of each Process: \n");
	for(i=0;i<q;i++)
	{
		printf("Maximum requirement of Process %d: ",i+1);
		scanf("%d",&max[i]);
		if(max[i]>p)
	    {
			printf("Maximum requirement cannot be greater than total number of resources.\n Enter requirement again: ");
		    scanf("%d",&max[i]);

	    }
	    max_total=max_total+max[i];
	}
		if(max_total>=p+q)
		{
            printf("Conditions are not satisfying for safe state. \n It is in unsafe state. There are chances of dead lock.\n Do u want to still go on\n('Enter 1 if u want to continue 0 otherwise')\n");
            int ch;
            scanf("%d",&ch);
            if(ch!=1)
			return 0;
		}
		else
		{
			printf("The System is in a safe state\n");
		}

	StateCheck(max,available,q);
	return 0;
}